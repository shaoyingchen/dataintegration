<?xml version="1.0" encoding="UTF-8"?>
<libformula-functions>

    <!-- Basic computation : TODO: complete copy from OASIS spec -->

    <function>
        <category>基本计算</category>
        <name>+</name>
        <ckName>+</ckName>
        <description>2个数值的总和</description>
    </function>
    <function>
        <category>基本计算</category>
        <name>-</name>
        <ckName>-</ckName>
        <description>减去2个数值</description>
    </function>
    <function>
        <category>基本计算</category>
        <name>*</name>
        <ckName>*</ckName>
        <description>乘以2个数值</description>
    </function>
    <function>
        <category>基本计算</category>
        <name>/</name>
        <ckName>/</ckName>
        <description>除以2个数值</description>
    </function>
    <function>
        <category>基本计算</category>
        <name>^</name>
        <ckName>^</ckName>
        <description>计算一个数字到n次方，例如2 ^ 6解析为64</description>
    </function>
    <function>
        <category>基本计算</category>
        <name>%</name>
        <ckName>%</ckName>
        <description>百分比计算，例如12％解析为0.12</description>
    </function>
    <function>
        <category>基本计算</category>
        <name>(</name>
        <ckName>(</ckName>
        <description>用开括号影响表达式中的计算顺序</description>
    </function>
    <function>
        <category>基本计算</category>
        <name>)</name>
        <ckName>)</ckName>
        <description>右括号可影响表达式中的计算顺序</description>
    </function>

    <!-- Comparisons  : TODO: complete copy from OASIS spec -->

    <function>
        <category>比较</category>
        <name>=</name>
        <ckName>=</ckName>
        <description>验证2个值是否相等</description>
    </function>
    <function>
        <category>比较</category>
        <name>&lt;&gt;</name>
        <ckName>&lt;&gt;</ckName>
        <description>查看两个值是否不同</description>
    </function>
    <function>
        <category>比较</category>
        <name>&lt;</name>
        <ckName>&lt;</ckName>
        <description>查看一个值是否小于另一个</description>
    </function>
    <function>
        <category>比较</category>
        <name>&gt;</name>
        <ckName>&gt;</ckName>
        <description>查看一个值是否大于另一个值</description>
    </function>
    <function>
        <category>比较</category>
        <name>&lt;=</name>
        <ckName>&lt;=</ckName>
        <description>查看一个值是否小于或等于另一个</description>
    </function>
    <function>
        <category>比较</category>
        <name>&gt;=</name>
        <ckName>&gt;=</ckName>
        <description>查看一个值是否大于或等于另一个</description>
    </function>


    <!-- Information : This list is complete -->

    <function>
        <category>逻辑运算符</category>
        <name>case</name>
        <ckName>case</ckName>
        <description>函数中的case when语法</description>
        <syntax>case when []=[] then [] when []=[] else [] end</syntax>
        <returns></returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>逻辑运算符</category>
        <name>and</name>
        <ckName>and</ckName>
        <description>and</description>
        <syntax>and</syntax>
        <returns>true/false</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>逻辑运算符</category>
        <name>or</name>
        <ckName>or</ckName>
        <description>or</description>
        <syntax>or</syntax>
        <returns>true/false</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>逻辑运算符</category>
        <name>not</name>
        <ckName>not</ckName>
        <description>not</description>
        <syntax>not</syntax>
        <returns>true/false</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>数值函数</category>
        <name>abs</name>
        <ckName>abs</ckName>
        <description>绝对值</description>
        <syntax>abs(a)</syntax>
        <returns>number</returns>
        <constraints></constraints>
        <semantics>计算数字(a)的绝对值。也就是说，如果a &lt; 0，它返回-a。对于无符号类型，它不执行任何操作。对于有符号整数类 型，它返回无符号数。</semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>数值函数</category>
        <name>round</name>
        <ckName>round</ckName>
        <description>四舍五入</description>
        <syntax>round(a,b)</syntax>
        <returns>number</returns>
        <constraints></constraints>
        <semantics>将值取整到指定的小数位数。 该函数按顺序返回最近的数字。如果给定数字包含多个最近数字，则函数返回其中最接近偶数的数字(银行的取整方式)。</semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>数值函数</category>
        <name>floor</name>
        <ckName>floor</ckName>
        <description>截取（下）</description>
        <syntax>floor(a,b)</syntax>
        <returns>number</returns>
        <constraints></constraints>
        <semantics>返回小于或等于x的最大舍入数。该函数使用参数乘1/10N，如果1/10N不精确，则选择最接近的精确的适当数据类型的 数。 ‘N’是一个整数常量，可选参数。默认为0，这意味着不对其进行舍入。
            ‘N’可以是负数。
        </semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>数值函数</category>
        <name>ceil</name>
        <ckName>ceil</ckName>
        <description>截取（上）</description>
        <syntax>ceil(a,b)</syntax>
        <returns>number</returns>
        <constraints></constraints>
        <semantics>返回大于或等于'x'的最小舍入数。在其他方面，它与'floor'功能相同(见上文)。</semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>字符串函数</category>
        <name>||</name>
        <ckName>||</ckName>
        <description>字符串拼接</description>
        <syntax>||</syntax>
        <returns>string</returns>
        <constraints></constraints>
        <semantics>字段或者固定值的拼接</semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>字符串函数</category>
        <name>find</name>
        <ckName>position</ckName>
        <description>查找</description>
        <syntax>position(haystack, needle)</syntax>
        <returns>int</returns>
        <constraints></constraints>
        <semantics>在字符串 haystack 中搜索子串 needle 。 返回子串的位置(以字节为单位)，从1开始，如果未找到子串，则返回0。</semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>字符串函数</category>
        <name>lower</name>
        <ckName>lower</ckName>
        <description>转小写</description>
        <syntax>lower(a)</syntax>
        <returns>string</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>字符串函数</category>
        <name>upper</name>
        <ckName>upper</ckName>
        <description>转大写</description>
        <syntax>upper(a)</syntax>
        <returns>string</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>字符串函数</category>
        <name>trim</name>
        <ckName>trimBoth</ckName>
        <description>去空（两边）</description>
        <syntax>trimBoth(a)</syntax>
        <returns>string</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>字符串函数</category>
        <name>ltrim</name>
        <ckName>trimLeft</ckName>
        <description>去空（从左）</description>
        <syntax>trimLeft(a)</syntax>
        <returns>string</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>字符串函数</category>
        <name>rtrim</name>
        <ckName>trimRight</ckName>
        <description>去空（从右）</description>
        <syntax>trimRight(a)</syntax>
        <returns>string</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>字符串函数</category>
        <name>left</name>
        <ckName>left</ckName>
        <description>截取（从左）</description>
        <syntax>mid(a, 1, length)</syntax>
        <returns>string</returns>
        <constraints></constraints>
        <semantics>从左开始以字节为单位截取指定字符串,返回长度为‘length’的子串</semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>字符串函数</category>
        <name>right</name>
        <ckName>mid</ckName>
        <description>截取（从右）</description>
        <syntax>mid(a, length(a)-length-1)</syntax>
        <returns>string</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>字符串函数</category>
        <name>mid</name>
        <ckName>mid</ckName>
        <description>截取（自定）</description>
        <syntax>mid(a, offset, length)</syntax>
        <returns>string</returns>
        <constraints></constraints>
        <semantics>以字节为单位截取指定位置字符串，返回以‘offset’位置为开头，长度为‘length’的子串。‘offset’从1开始(与标准SQL相 同)。‘offset’和‘length’参数必须是常量。
        </semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>字符串函数</category>
        <name>substitute</name>
        <ckName>replaceAll</ckName>
        <description>替换（按内容）</description>
        <syntax>replaceAll(haystack, pattern, replacement)</syntax>
        <returns>string</returns>
        <constraints></constraints>
        <semantics>用‘replacement’子串替换‘haystack’中出现的所有‘pattern’子串。</semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>日期函数</category>
        <name>date_between</name>
        <ckName>dateDiff</ckName>
        <description>日期间隔计算</description>
        <syntax>dateDiff(unit, t1, t2)</syntax>
        <returns>int</returns>
        <constraints></constraints>
        <semantics>返回以'unit'为单位表示的两个时间之间的差异（second(秒),minute(分),hour(时),day(天),week(周),month(月),quarter(季),year(年) 。
            't1'和't2'可以是Date或DateTime
        </semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>日期函数</category>
        <name>last_date_year</name>
        <ckName>addYears(addDays(toStartOfYear([date]),-1),1)</ckName>
        <description>今年最后一天</description>
        <syntax>addYears(addDays(toStartOfYear([date]),-1),1)</syntax>
        <returns>date</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>日期函数</category>
        <name>last_date_quarter</name>
        <ckName>addQuarters(addDays(toStartOfQuarter([date]),-1),1)</ckName>
        <description>本季度最后一天</description>
        <syntax>addQuarters(addDays(toStartOfQuarter([date]),-1),1)</syntax>
        <returns>date</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>日期函数</category>
        <name>last_date_month</name>
        <ckName>addMonths(addDays(toStartOfMonth([date]),-1),1)</ckName>
        <description>本月最后一天</description>
        <syntax>addMonths(addDays(toStartOfMonth([date]),-1),1)</syntax>
        <returns>date</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>日期函数</category>
        <name>last_date_week</name>
        <ckName>addWeeks(addDays(toMonday([toMonday]),-1),1)</ckName>
        <description>本周最后一天</description>
        <syntax>addWeeks(addDays(toMonday([toMonday]),-1),1)</syntax>
        <returns>date</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>日期函数</category>
        <name>first_date_year</name>
        <ckName>toStartOfYear([date])</ckName>
        <description>今年第一天</description>
        <syntax>toStartOfYear([date])</syntax>
        <returns>date</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>日期函数</category>
        <name>first_date_quarter</name>
        <ckName>toStartOfQuarter([date])</ckName>
        <description>本季度第一天</description>
        <syntax>toStartOfQuarter([date])</syntax>
        <returns>date</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>日期函数</category>
        <name>first_date_month</name>
        <ckName>toStartOfMonth([date])</ckName>
        <description>本月第一天</description>
        <syntax>toStartOfMonth([date])</syntax>
        <returns>date</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>日期函数</category>
        <name>first_date_week</name>
        <ckName>toMonday([date])</ckName>
        <description>本周第一天</description>
        <syntax>toMonday([date])</syntax>
        <returns>date</returns>
        <constraints></constraints>
        <semantics></semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>类型转换函数</category>
        <name>to_char</name>
        <ckName>to_char</ckName>
        <description>转成字符串</description>
        <syntax>to_char(a)</syntax>
        <returns>string</returns>
        <constraints></constraints>
        <semantics>将任意类型转换成字符串，如果是时间类型格式为'YYYY-MM-DD hh:mm:ss'</semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>类型转换函数</category>
        <name>to_number</name>
        <ckName>toDecimal32</ckName>
        <description>转数值</description>
        <syntax>toDecimal32(value, S)</syntax>
        <returns>number</returns>
        <constraints></constraints>
        <semantics>将 value 转换为精度为 S 的Decimal。 value 可以是数字或字符串。 S 参数为指定的小数位数。</semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>类型转换函数</category>
        <name>to_date</name>
        <ckName>toDateTime</ckName>
        <description>转日期</description>
        <syntax>toDateTime('2016-06-15 23:00:00')</syntax>
        <returns>date</returns>
        <constraints></constraints>
        <semantics>将字符串转日期，格式固定为‘YYYY-MM-DD hh:mm:ss’</semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>

    <function>
        <category>判断函数</category>
        <name>is_null</name>
        <ckName>isNull</ckName>
        <description>是否为空</description>
        <syntax>isNull(x)</syntax>
        <returns>0/1</returns>
        <constraints></constraints>
        <semantics>检查参数x是否为NULL。</semantics>
        <examples>
            <example>
                <expression></expression>
                <result></result>
                <level></level>
                <comment></comment>
            </example>
        </examples>
    </function>


</libformula-functions>
